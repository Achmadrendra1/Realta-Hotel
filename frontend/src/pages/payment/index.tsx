import Layouts from "@/layouts/layout";
import {
  CreditCardOutlined,
  DollarCircleOutlined,
  RightOutlined,
} from "@ant-design/icons";
import { Button, Card, Col, Row } from "antd";
import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import ActivationHpay from "./activationHpay";
import { useDispatch, useSelector } from "react-redux";
import {
  doBankRequest,
  doPagaRequest,
  doUsacRequest,
} from "@/Redux/Action/Payment/paymentDashAction";
import { doGetHistory } from "@/Redux/Action/Payment/paymentUserAction";

export default function index() {
  const dispacth = useDispatch();
  const [isActive, setIsActive] = useState(false);
  const [isOpenAct, setOpenAct] = useState(false);
  const [isEmpty, setEmpty] = useState(false);

  const user = useSelector((state: any) => state.GetUserReducer.getUser);
  const { payBank } = useSelector((state: any) => state.payBankReducer);
  const { payPaga } = useSelector((state: any) => state.payPagaReducer);
  const { payHistoryTrx } = useSelector(
    (state: any) => state.payTrxHistoryReducer
  );
  const { account, error } = useSelector(
    (state: any) => state.payUserAccReducer
  );
  const accNumberDompet = `131${user[0]?.user_phone_number}`;
  const accNumberGoto = user[0]?.user_phone_number;

  useEffect(() => {
    dispacth(doBankRequest());
    dispacth(doUsacRequest());
    dispacth(doPagaRequest());
    dispacth(doGetHistory());
  }, []);

  //Filter History By User
  const dataTrx = payHistoryTrx?.filter(
    (obj: any) => obj.patrUserId === user[0]?.user_id
  );

  //Get User Account By User Id yang login
  const userAcc = account?.filter(
    (obj: any) => obj.usacUserId === user[0]?.user_id
  );
  //Di filter by Type buat misah antara bank/fintech
  const bankAcc = userAcc?.filter(
    (obj: any) => obj.usacType === "Credit Card" || obj.usacType === "Debet"
  );
  const fintechAcc = userAcc?.filter((obj: any) => obj.usacType === "Payment");

  //Check Status Account Dompet Realta
  const accDompet = fintechAcc?.find(
    (item: any) => item.usacAccountNumber == accNumberDompet
  );

  useEffect(() => {
    accDompet ? setIsActive(true) : setIsActive(false);
  }, [accDompet]);

  //Get Saldo Dompet Realta
  const saldoDompet = parseInt(accDompet?.usacSaldo).toLocaleString("id-ID", {
    style: "currency",
    currency: "IDR",
    minimumFractionDigits: 0,
    maximumFractionDigits: 0,
  });

  const handleOk = () => {
    setTimeout(() => {
      setOpenAct(false);
      // setConfirmLoading(false);
    }, 2000);
  };

  const handleCancel = () => {
    console.log("Clicked cancel button");
    setOpenAct(false);
  };

  const handleActive = (data: boolean) => {
    setIsActive(data);
  };
  const handleCancell = (data: boolean) => {
    setOpenAct(data);
  };
  console.log(dataTrx)
  return (
    <>
      <Head>
        <title>Hotel App - Payment</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/assets/Hotel_Icon.png" />
      </Head>
      <main>
        <Layouts>
          {isOpenAct ? (
            <ActivationHpay
              show={isOpenAct}
              clickOk={handleOk}
              clickCancel={handleCancel}
              handleAct={handleActive}
              handleCancell={handleCancell}
            />
          ) : null}
          <div className="relative w-full h-60 justify-center p-4 bg-blue-700 m-auto rounded-xl bg-center bg-cover bg-no-repeat flex mb-6">
            <div className="p-4 flex justify-center w-full pl-28 pr-28">
              <Row gutter={16} className="w-full ">
                <Col span={12} className="pt-4 ml-28">
                  <p className="text-white text-2xl font-bold">
                    Easy Your Transactions with H-Pay
                  </p>
                  <p className="text-white text-sm flex-wrap">
                    Get started with H-Pay for Hotels today and experience the
                    future of travel payments. Book your next stay with ease and
                    enjoy a stress-free travel experience.
                  </p>
                  <Button className="text-white mt-4 hover:text-white">
                    Learn More
                  </Button>
                </Col>
                <Col>
                  <img src="/assets/payment.png" className="h-auto w-40" />
                </Col>
              </Row>
              <div className="absolute w-3/4 bg-white rounded-lg drop-shadow-lg py-6 px-8 m-auto mt-44">
                <Row gutter={16} className="flex justify-around">
                  <Col
                    span={12}
                    className="p-4 border-0 hover:border-r-2 hover:cursor-pointer"
                  >
                    {isActive ? (
                      <Link href={"payment/hpay"}>
                        <Row gutter={8}>
                          <Col>
                            <DollarCircleOutlined className="text-xl mt-2 mr-2" />
                          </Col>
                          <Col span={16}>
                            <p className="text-md text-blue-700 font-bold">
                              H-Pay Balance
                            </p>
                            <p className="text-md text-gray-700">
                              {saldoDompet}
                            </p>
                          </Col>
                          <Col>
                            <RightOutlined className="text-xl mt-2" />
                          </Col>
                        </Row>
                      </Link>
                    ) : (
                      <div className="text-center">
                        <p className="text-md text-blue-700 font-bold">
                          Activate Seamless Transactions with H-Pay Now!
                        </p>
                        <Button
                          className="mt-2"
                          onClick={() => setOpenAct(true)}
                        >
                          Activate H-Pay Now!
                        </Button>
                      </div>
                    )}
                  </Col>
                  <Col
                    span={12}
                    className="p-4 border-0 hover:border-l-2 hover:cursor-pointer"
                  >
                    <Link href={"payment/cards"}>
                      <Row gutter={8}>
                        <Col>
                          <CreditCardOutlined className="text-xl mt-2 mr-2" />
                        </Col>
                        <Col span={16}>
                          <p className="text-md text-blue-700 font-bold">
                            My Cards
                          </p>
                          {bankAcc.length < 0 ? (
                            <p>Add Your Card Here</p>
                          ) : (
                            <p className="text-md text-gray-700">
                              {bankAcc.length} Cards
                            </p>
                          )}
                        </Col>
                        <Col>
                          <RightOutlined className="text-xl mt-2" />
                        </Col>
                      </Row>
                    </Link>
                  </Col>
                </Row>
              </div>
            </div>
          </div>
          <div className="mt-32 mb-6 w-3/4 drop-shadow-lg m-auto border-b-md bg-gray-200">
            <Card title="History Transaction" extra={<RightOutlined />}>
              {dataTrx.map((item: any) => (
                <Card
                  type="inner"
                  title={item.patrTrxId}
                  extra={item.patrModifiedDate.split("T")[0]}
                  className="mb-4"
                >
                  <div>
                    <div className="flex justify-between">
                      <p className="font-bold text-lg">{item.patrNote}</p>
                      <p className="text-md">Rp. 500.000</p>
                    </div>
                    <div className="flex justify-between">
                      <p className="text-md">{item.patrOrderNumber}</p>
                      <p className="text-md text-green-600 font-semibold">
                        {
                         payPaga.find((obje:any)=> obje.pagaEntityId == userAcc?.find(
                          (obj: any) => obj.usacAccountNumber == item.patrSourceId
                          )?.usacEntityId)?.pagaName
                          ||
                          payBank.find((obje:any)=> obje.bankEntityId == userAcc?.find(
                            (obj: any) => obj.usacAccountNumber == item.patrSourceId
                            )?.usacEntityId)?.bankName
                        }
                      </p>
                    </div>
                  </div>
                </Card>
              ))}
              {/* <Card
                  type="inner"
                  title="TRB#20230123-0001"
                  extra={'23-01-2023'}
                  className="mb-4"
                >
                  <div>
                  <p className="font-bold text-lg">Booking</p>
                  <p className="text-md">Hotel ABC</p>
                  <p className="text-right text-md">Rp. 500.000</p>
                  <p className="text-right text-md text-green-600 font-semibold">Credit Card</p>
                  </div>
                </Card>
                <Card
                  type="inner"
                  title="RF#20230123-0001"
                  extra={'23-01-2023'}
                  className="mb-4"
                >
                  <div>
                  <p className="font-bold text-lg">Refund</p>
                  <p className="text-md">For Transaction BO#20230123-0002</p>
                  <p className="text-right text-md">Rp. 500.000</p>
                  <p className="text-right text-md text-green-600 font-semibold">Debet Card</p>
                  </div>
                </Card> */}
            </Card>
          </div>
        </Layouts>
      </main>
    </>
  );
}
